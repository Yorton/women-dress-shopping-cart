{"version":3,"sources":["util.js","components/Products.js","actions/productActions.js","types.js","actions/cartActions.js","components/Filter.js","components/Cart.js","actions/orderActions.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","index.js"],"names":["formatCurrency","num","Number","toFixed","toLocaleString","Products","props","openModal","product","setState","closeModal","state","this","fetchProducts","bottom","cascade","products","className","map","key","_id","href","onClick","src","image","alt","title","price","addToCart","isOpen","onRequestClose","description","availableSizes","x","Component","connect","filteredItems","dispatch","a","fetch","res","json","data","console","log","type","payload","getState","cartItems","cart","slice","alreadyExists","forEach","count","push","localStorage","setItem","JSON","stringify","Filter","filteredProducts","length","value","sort","onChange","e","sortProducts","target","size","filterProducts","items","filter","indexOf","sortedProducts","b","Cart","handleInput","name","createOrder","preventDefault","order","email","address","total","reduce","c","clearOrder","showCheckout","createdAt","left","item","removeFromCart","right","onSubmit","required","method","headers","body","then","clear","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","action","parse","getItem","applyMiddleware","thunk","App","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8ae5848.chunk.js","sourcesContent":["export default function formatCurrency(num){\r\n    return \"$\" + Number(num.toFixed(1)).toLocaleString() + \" \";\r\n}","import React, { Component } from 'react'\r\nimport formatCurrency from '../util';\r\nimport Fade from 'react-reveal/Fade';\r\nimport Modal from 'react-modal';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { connect } from 'react-redux';\r\nimport {fetchProducts} from '../actions/productActions';\r\nimport { addToCart} from '../actions/cartActions';\r\n\r\nclass Products extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            product: null\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetchProducts();\r\n    }\r\n\r\n    openModal = (product) => {\r\n        this.setState({product});\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({product: null});\r\n    }\r\n\r\n    render() {\r\n\r\n        const {product} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Fade bottom cascade>\r\n                    {\r\n                        !this.props.products ? (<div>Loading...</div>)\r\n                        :\r\n                        (\r\n                            <ul className=\"products\">\r\n                                {\r\n                                    this.props.products.map(product => (\r\n                                        <li key={product._id}>\r\n                                            <div className=\"product\">\r\n                                                <a href={\"#\"+product._id} onClick={()=>this.openModal(product)}>\r\n                                                    <img src={product.image} alt={product.title}></img>\r\n                                                    <p>\r\n                                                        {product.title}\r\n                                                    </p>\r\n                                                </a>\r\n                                                <div className=\"product-price\">\r\n                                                    <div>\r\n                                                        {formatCurrency(product.price)}\r\n                                                    </div>\r\n                                                    <button onClick={() => {\r\n                                                        this.props.addToCart(product);\r\n                                                        this.closeModal();\r\n                                                        }} className=\"button primary\">\r\n                                                        Add to Cart\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    ))\r\n                                }\r\n                            </ul>\r\n                        )\r\n                    }\r\n                   \r\n                </Fade>\r\n                {\r\n                    product && (\r\n                        <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n                            <Zoom>\r\n                                <button className=\"close-modal\" onClick={this.closeModal}>\r\n                                    x\r\n                                </button>\r\n                                <div className=\"product-details\">\r\n                                    <img src={product.image} alt={product.title}></img>\r\n                                    <div className=\"product-details-description\">\r\n                                        <p>\r\n                                            <strong>{product.title}</strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            {product.description}\r\n                                        </p>\r\n                                        <p>\r\n                                            Available Sizes:{\" \"}\r\n                                            {product.availableSizes.map(x => (\r\n                                                <span>\r\n                                                    {\" \"}\r\n                                                    <button className=\"button\">\r\n                                                        {x}\r\n                                                    </button>\r\n                                                </span>\r\n                                            ))}\r\n                                        </p>\r\n                                        <div className=\"product-price\">\r\n                                            <div>\r\n                                                {formatCurrency(product.price)}\r\n                                            </div>\r\n                                            <button className=\"button primary\" onClick={() => {\r\n                                                this.props.addToCart(product);\r\n                                                this.closeModal();\r\n                                            }}>\r\n                                                Add To Cart\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Zoom>\r\n                        </Modal>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// not use this.state.products but state.products due to from state of store\r\nexport default connect((state) => ({\r\n    products: state.products.filteredItems\r\n})\r\n, {\r\n    fetchProducts,\r\n    addToCart\r\n})(Products);","import { FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from \"../types\";\r\n\r\nexport const fetchProducts = () => async (dispatch) => {\r\n\r\n    const res = await fetch(\"api/products\");\r\n\r\n    const data = await res.json();\r\n    console.log(data);\r\n    dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: data\r\n    });\r\n\r\n}\r\n\r\nexport const filterProducts = (products, size) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: FILTER_PRODUCTS_BY_SIZE,\r\n        payload: {\r\n            size: size,\r\n            items: size === \"\"\r\n            ? products\r\n            : products.filter(x => x.availableSizes.indexOf(size) >= 0)\r\n        }\r\n    });\r\n}\r\n\r\nexport const sortProducts = (filteredProducts, sort) => (dispatch) => {\r\n\r\n    const sortedProducts = filteredProducts.slice();\r\n    if (sort === \"latest\"){\r\n        sortedProducts.sort((a,b) => (a._id > b._id ? 1 : -1));\r\n    }else{\r\n        sortedProducts.sort((a,b) => (\r\n            sort === \"lowest\"\r\n                ? a.price > b.price \r\n                    ? 1 : -1\r\n                : a.price > b.price \r\n                    ? -1 : 1\r\n        ));\r\n    }\r\n\r\n    dispatch({\r\n        type: ORDER_PRODUCTS_BY_PRICE,\r\n        payload: {\r\n            sort: sort,\r\n            items: sortedProducts\r\n        }\r\n    });\r\n\r\n}","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\r\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CREATE_ORDER = \"CREATE_ORDER\";\r\nexport const CLEAR_ORDER = \"CLEAR_ORDER\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\r\n\r\nexport const addToCart = (/*items,*/ product) => (dispatch, getState) => {\r\n\r\n    const cartItems = getState().cart.cartItems.slice();//items.slice();\r\n    let alreadyExists = false;\r\n    cartItems.forEach((x) => {\r\n        if (x._id === product._id){\r\n            alreadyExists = true;\r\n            x.count++;\r\n        }\r\n    });\r\n\r\n    if (!alreadyExists){\r\n        cartItems.push({...product, count: 1});\r\n    }\r\n\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload:{\r\n            cartItems\r\n        }\r\n    });\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n}\r\n\r\nexport const removeFromCart = (/*items,*/ product) => (dispatch, getState) => {\r\n\r\n    //const cartItems = items.slice().filter(x => x._id !== product._id);\r\n    const cartItems = getState().cart.cartItems.slice().filter(x => x._id !== product._id);\r\n  \r\n    dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        payload:{\r\n            cartItems\r\n        }\r\n    });\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {filterProducts, sortProducts} from '../actions/productActions';\r\n\r\nclass Filter extends Component {\r\n    render() {\r\n        return (\r\n\r\n            !this.props.filteredProducts\r\n            ? (<div>Loading...</div>)\r\n            : (\r\n                <div className=\"filter\">\r\n                    <div className=\"filter-result\">{/*this.props.count*/this.props.filteredProducts.length} Products</div>\r\n                    <div className=\"filter-sort\">\r\n                        Order{\" \"}\r\n                        <select value={this.props.sort} onChange={\r\n                            /*this.props.sortProducts*/\r\n                            (e)=> this.props.sortProducts(this.props.filteredProducts, e.target.value)\r\n                            }>\r\n                            <option value=\"latest\">Latest</option>\r\n                            <option value=\"lowest\">Lowest</option>\r\n                            <option value=\"highest\">Highest</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"filter-size\">\r\n                        Filter{\" \"}\r\n                        <select value={this.props.size} onChange={\r\n                            /*this.props.filterProducts*/\r\n                            (e)=> this.props.filterProducts(this.props.products, e.target.value)\r\n                            }>\r\n                            <option value=\"\">ALL</option>\r\n                            <option value=\"XS\">XS</option>\r\n                            <option value=\"S\">S</option>\r\n                            <option value=\"M\">M</option>\r\n                            <option value=\"L\">L</option>\r\n                            <option value=\"XL\">XL</option>\r\n                            <option value=\"XXL\">XXL</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    size: state.products.size,\r\n    sort: state.products.sort,\r\n    products: state.products.items,\r\n    filteredProducts: state.products.filteredItems\r\n}), {\r\n    filterProducts,\r\n    sortProducts\r\n})(Filter);","import React, { Component } from 'react';\r\nimport formatCurrency from '../util';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { connect } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport { removeFromCart} from '../actions/cartActions';\r\nimport { createOrder, clearOrder} from '../actions/orderActions';\r\n\r\nclass Cart extends Component {\r\n\r\n\r\n    constructor(props){\r\n       \r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            address: \"\",\r\n            showCheckout: false\r\n        };\r\n    }\r\n\r\n    handleInput = (e) =>{\r\n\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    createOrder = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const order = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            address: this.state.address,\r\n            cartItems: this.props.cartItems,\r\n            total: this.props.cartItems.reduce((a,c) => a + c.price * c.count, 0)\r\n        };\r\n\r\n        this.props.createOrder(order);\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.props.clearOrder();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {cartItems, order} = this.props;\r\n\r\n        return (\r\n      \r\n            <div>\r\n                {\r\n                    cartItems.length === 0 ? (\r\n                        <div className=\"cart cart-header\">Cart is empty</div>\r\n                    ):(\r\n                        <div className=\"cart cart-header\">You have {cartItems.length} in the cart {\" \"}</div>\r\n                    )\r\n                }\r\n\r\n                {\r\n                    order && (\r\n                        <Modal\r\n                        isOpen={true}\r\n                        onRequestClose={this.closeModal}\r\n                        >\r\n                            <Zoom>\r\n                                <button className=\"close-modal\" onClick={this.closeModal}>x</button>\r\n                                <div className=\"order-details\">\r\n                                    <h3 className=\"success-message\">Your order has been placed.</h3>\r\n                                    <h2>Order {order._id}</h2>\r\n                                    <ul>\r\n                                        <li>\r\n                                            <div>Name:</div>\r\n                                            <div>{order.name}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div>Email:</div>\r\n                                            <div>{order.email}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div>Address:</div>\r\n                                            <div>{order.address}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div>Date:</div>\r\n                                            <div>{order.createdAt}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div>Total:</div>\r\n                                            <div>{formatCurrency(order.total)}</div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div>Cart Items:</div>\r\n                                            <div>{\r\n                                                order.cartItems.map((x)=>(\r\n                                                    <div>\r\n                                                        {x.count}{\" x \"}{x.title}\r\n                                                    </div>\r\n                                                ))\r\n                                            }</div>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </Zoom>\r\n                        </Modal>\r\n                    )\r\n                }\r\n\r\n                <div className=\"cart\">\r\n                    <Fade left cascade>\r\n                        <ul className=\"cart-items\">\r\n                            {\r\n                                cartItems.map(item => (\r\n                                    <li key={item._id}>\r\n                                        <div>\r\n                                            <img src={item.image} alt={item.title}></img>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div>{item.title}</div>\r\n                                            <div className=\"right\">\r\n                                                {formatCurrency(item.price)} x {item.count}{\" \"}\r\n                                                <button className=\"button\" \r\n                                                onClick={() => {this.props.removeFromCart(item)}}>Remove</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    </Fade>\r\n                </div>\r\n                {\r\n                    cartItems.length !== 0 && (\r\n                        <div>\r\n                            <div className=\"cart\">\r\n                                <div className=\"total\">\r\n                                    <div>\r\n                                        Total:{\" \"}\r\n                                        {formatCurrency(\r\n                                            cartItems.reduce((a, c) => a+c.price*c.count, 0)\r\n                                        )}\r\n                                    </div>\r\n                                    <button onClick={\r\n                                        () => {\r\n                                            this.setState({showCheckout: true})\r\n                                        }\r\n                                    } \r\n                                    className=\"button primary\">Proceed</button>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.state.showCheckout && (\r\n                                    <Fade right cascade>\r\n                                         <div className=\"cart\">\r\n                                            <form onSubmit={this.createOrder}>\r\n                                                <ul className=\"form-container\">\r\n                                                    <li>\r\n                                                        <label>Email</label>\r\n                                                        <input type=\"email\" name=\"email\" required onChange={this.handleInput}></input>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <label>Name</label>\r\n                                                        <input type=\"text\" name=\"name\" required onChange={this.handleInput}></input>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <label>Address</label>\r\n                                                        <input type=\"text\" name=\"address\" required onChange={this.handleInput}></input>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        <button type=\"submit\" className=\"button primary\">Checkout</button>\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </form>\r\n                                        </div>\r\n                                    </Fade>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n       \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect((state) => (\r\n{\r\n    order: state.order.order,\r\n    cartItems: state.cart.cartItems\r\n}), \r\n{\r\n    removeFromCart,\r\n    createOrder,\r\n    clearOrder\r\n})(Cart);","import { CREATE_ORDER, CLEAR_ORDER, CLEAR_CART } from \"../types\";\r\n\r\nexport const createOrder = (order) => async (dispatch) => {\r\n\r\n    fetch(\"api/orders\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(order)\r\n    }).then((res)=> res.json())\r\n    .then((data) => {\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.clear(\"cartItems\");\r\n        dispatch({type: CLEAR_CART });\r\n    });\r\n}\r\n\r\nexport const clearOrder = () => (dispatch) => {\r\n\r\n    //localStorage.clear(\"cartItems\"); //don't do this which is only give up order but still keep cart items\r\n    dispatch({type: CLEAR_ORDER });\r\n}","import {createStore, applyMiddleware, compose, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk' ;\r\nimport {productReducer} from './reducers/productReducers';\r\nimport {cartReducer} from './reducers/cartReducers';\r\nimport { orderReducer } from './reducers/orderReducers';\r\n\r\nconst initialState = {};\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    combineReducers({\r\n        products: productReducer,\r\n        cart: cartReducer,\r\n        order: orderReducer\r\n    }),\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import {FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE} from '../types';\r\n\r\nexport const productReducer = (state = {}, action) =>{\r\n    switch(action.type){\r\n\r\n        case FILTER_PRODUCTS_BY_SIZE:\r\n            return {\r\n                ...state,\r\n                size: action.payload.size,\r\n                filteredItems: action.payload.items\r\n            };\r\n        case ORDER_PRODUCTS_BY_PRICE:\r\n            return {\r\n                ...state,\r\n                sort: action.payload.sort,\r\n                filteredItems: action.payload.items\r\n            };\r\n        case FETCH_PRODUCTS:\r\n            return {items: action.payload, filteredItems: action.payload};\r\n            //return {...state, items: action.payload, filteredItems: action.payload}; //ok as well\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\r\n\r\nexport const cartReducer = (state = {\r\n    cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\")\r\n}, action) =>{\r\n    switch(action.type){\r\n\r\n        case ADD_TO_CART:\r\n            return {\r\n                cartItems: action.payload.cartItems\r\n            };\r\n        case REMOVE_FROM_CART:\r\n            return  {\r\n                cartItems: action.payload.cartItems\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CREATE_ORDER, CLEAR_ORDER, CLEAR_CART } from \"../types\";\r\n\r\nconst orderReducer = (state = {}, action) =>{\r\n\r\n    switch(action.type){\r\n\r\n        case CREATE_ORDER:\r\n            return {\r\n                order: action.payload\r\n            };\r\n        case CLEAR_ORDER:\r\n            return  {\r\n                order: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport {orderReducer};\r\n\r\n","import React from 'react';\n//import data from './data.json';\nimport Products from './components/Products' ;\nimport Filter from './components/Filter';\nimport Cart from './components/Cart';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n\nclass App extends React.Component {\n\n  /*no use redux*/\n\n  // constructor(){\n\n  //   super();\n  //   this.state = {\n  //     products: data.products,\n  //     cartItems: localStorage.getItem(\"cartItems\") \n  //                 ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  //                 : [],\n  //     size: \"\",\n  //     sort: \"\"\n  //   }\n  // }\n\n  // createOrder = (order) => {\n    \n  //   alert(\"need to save order for \"+order.name);\n  // }\n\n  // removeFromCart = (product) => {\n\n  //   const cartItems = this.state.cartItems.slice();\n  //   this.setState({cartItems: cartItems.filter(x => x._id !== product._id)});\n\n  //   //use this.state.cartItems would be not work due to state is async\n  //   localStorage.setItem(\"cartItems\", JSON.stringify(cartItems.filter(x => x._id !== product._id)));\n  // }\n\n  // addToCart = (product) => {\n\n  //   const cartItems = this.state.cartItems.slice();\n  //   let alreadyInCart = false;\n  //   cartItems.forEach((item) => {\n  //     if (item._id === product._id){\n  //         item.count++;\n  //         alreadyInCart = true;\n  //     }\n  //   });\n\n  //   if (!alreadyInCart){\n  //       cartItems.push({...product, count: 1});\n  //   }\n\n  //   this.setState({cartItems});\n\n  //   //use this.state.cartItems would be not work due to state is async\n  //   localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  // }\n\n\n  // sortProducts = (event) => {\n\n  //   const sort = event.target.value;\n  //   this.setState((state) => ({\n  //     sort: sort,\n  //     products: this.state.products.slice().sort((a,b) => (\n  //       sort === \"lowest\" \n  //         ? a.price > b.price\n  //           ? 1 \n  //           : -1 \n  //         : sort === \"highest\" \n  //           ? a.price < b.price \n  //             ? 1 \n  //             : -1 \n  //           : a._id < b._id\n  //             ? 1 \n  //             : -1\n  //     ))\n  //   }));\n  // }\n\n  // filterProducts = (event) => {\n  //  if (event.target.value === \"\"){\n  //     this.setState({size: event.target.value, products: data.products});\n  //   }else{\n  //     this.setState({\n  //       size: event.target.value,\n  //       products: data.products.filter(product => product.availableSizes.indexOf(event.target.value) >= 0)\n  //     });\n  //   }\n  // }\n  /*no use redux*/\n\n  render(){\n    return (\n\n      <Provider store={store}>\n           <div className=\"grid-container\">\n            <header><a href=\"/\">Shopping Cart</a></header>\n            <main>\n                <div className=\"content\">\n                  <div className=\"main\">\n                    <Filter \n                    /*no use redux*/\n                    /*count={this.state.products.length} \n                    size={this.state.size} \n                    sort={this.state.sort}\n                    filterProducts={this.filterProducts}\n                    sortProducts={this.sortProducts}*/\n                    ></Filter>\n                    <Products \n                      /*no use redux*/\n                      /*products={this.state.products}\n                      addToCart={this.addToCart}*/\n                    ></Products>\n                  </div>\n                  <div className=\"sidebar\">\n                    <Cart \n                    /*no use redux*/\n                    /*\n                    cartItems={this.state.cartItems} \n                    removeFromCart={this.removeFromCart}\n                    createOrder={this.createOrder} \n                    */\n                    />\n                  </div>\n                </div>\n            </main>\n            <footer>All right is reserved.</footer>\n          </div>\n      </Provider>\n    )\n  } \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}